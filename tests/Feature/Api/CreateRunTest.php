<?php

namespace Tests\Feature\Api;

use Carbon\Carbon;
use Lib\Models\Run;
use Lib\Models\User;
use Lib\Models\Waypoint;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class CreateRunTest extends TestCase
{
  use DatabaseMigrations;
  public function setUp()
  {
    parent::setUp(); // TODO: Change the autogenerated stub
    //create a user to authenticate
    
  }


  /**
   * Creates a correct run
   * @test
   */
  public function createRun()
  {
    $user = $this->createDefaultUser();
    $date = Carbon::now();
    $waypoints = factory(Waypoint::class,2)->create();
    $run =factory(Run::class)->make()->toArray();
    $res = $this->json("POST","/api/runs",array_merge($run,["waypoints"=>$waypoints->pluck("name")]), ["x-access-token"=>$user->getAccessToken()]);
      
    $res->assertStatus(200)->assertJsonFragment([
      "title"=>$run["name"],
      "nb_passenger"=>$run["nb_passenger"]
    ]);
    $model = Run::find(1);
    $this->assertEquals($model->name,$run["name"]);
    $this->assertEquals($model->nb_passenger,$run["nb_passenger"]);
  
    
  }

  /**
   * This run should fail
   * @todo Redo this test with publishing the run
   * @test
   * @skip
   */
  public function createRunWithouWaypoints()
  {
    $this->markTestSkipped('must be revisited.');
    $this->createDefaultUser();
    $date = Carbon::now();
    $res = $this->json("POST","/api/runs",["name"=>"Test run","planned_at"=>$date], ["x-access-token"=>"root"]);
    $res->assertStatus(422)->assertJsonStructure([
      "errors"=>[
        "waypoints",
        "nb_passenger"
      ]
    ]);
  }
}
