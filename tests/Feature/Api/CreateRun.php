<?php

namespace Tests\Feature\Api;

use Carbon\Carbon;
use Lib\Models\User;
use Lib\Models\Waypoint;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class CreateRun extends TestCase
{
  use DatabaseMigrations;
  public function setUp()
  {
    parent::setUp(); // TODO: Change the autogenerated stub
    //create a user to authenticate
    User::create([
      "email"=>"root@localhost",
      "phone_number"=>"",
      "sex"=>true,
      "accesstoken"=>"root",
      "firstname"=>"root",
      "name"=>"rootsey",
      "lastname"=>"toor",
      "password"=>bcrypt("root"),
      "status"=>\App\Helpers\Status::getUserStatus("actif")
    ]);
  }

  /**
   * Creates a correct run
   * @test
   */
  public function createRun()
  {
    $date = Carbon::now();
    $waypoints = factory(Waypoint::class,2)->make();
    $res = $this->json("POST","/api/runs",["name"=>"Test run","planned_at"=>$date,"waypoints"=>$waypoints], ["x-access-token"=>"root"]);
    $res->assertStatus(201)->assertJson([
      "title"=>"Test run",
      "planned"=>$date
    ]);
  }

  /**
   * This run should fail
   * @test
   */
  public function createRunWithouWaypoints()
  {

    $date = Carbon::now();
    $res = $this->json("POST","/api/runs",["name"=>"Test run","planned_at"=>$date], ["x-access-token"=>"root"]);
    $res->assertStatus(422)->seeJsonStructure([
      "errors"=>[
        "waypoints"
      ]
    ]);
  }
}
